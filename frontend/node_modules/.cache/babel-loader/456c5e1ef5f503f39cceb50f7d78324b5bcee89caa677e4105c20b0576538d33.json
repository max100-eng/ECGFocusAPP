{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maram\\\\Focus_ECG\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { getAuth, signInAnonymously, signInWithCustomToken } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\n\n// Define las variables globales proporcionadas por el entorno de Canvas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {};\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\n\n// Se inicializa Firebase con las configuraciones dadas.\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\n\n// Se define el componente principal de la aplicación.\nexport default function App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [image, setImage] = useState(null);\n  const [response, setResponse] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [pathologicalFindings, setPathologicalFindings] = useState('');\n  const canvasRef = useRef(null);\n\n  // Se maneja la autenticación de Firebase al cargar la aplicación.\n  useEffect(() => {\n    const authenticate = async () => {\n      try {\n        if (initialAuthToken) {\n          // Se usa el token personalizado para iniciar sesión si está disponible.\n          await signInWithCustomToken(auth, initialAuthToken);\n        } else {\n          // Se usa el inicio de sesión anónimo si no hay token.\n          await signInAnonymously(auth);\n        }\n      } catch (e) {\n        console.error('Error de autenticación:', e);\n        setError(`Error de autenticación: ${e.message}`);\n      }\n    };\n    authenticate();\n  }, []);\n\n  // Efecto para dibujar el gráfico ECG en el canvas cuando la respuesta cambia.\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas && response) {\n      drawECG(canvas, response);\n    }\n  }, [response]);\n\n  // Función para dibujar una simulación del ECG en el canvas.\n  const drawECG = (canvas, analysisText) => {\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    ctx.clearRect(0, 0, width, height);\n\n    // Dibuja el fondo cuadriculado del ECG\n    ctx.strokeStyle = '#f0f0f0';\n    ctx.lineWidth = 1;\n    const gridSize = 10;\n    for (let x = 0; x < width; x += gridSize) {\n      ctx.beginPath();\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, height);\n      ctx.stroke();\n    }\n    for (let y = 0; y < height; y += gridSize) {\n      ctx.beginPath();\n      ctx.moveTo(0, y);\n      ctx.lineTo(width, y);\n      ctx.stroke();\n    }\n\n    // Dibuja la línea base\n    ctx.strokeStyle = '#000000';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    const midY = height / 2;\n    ctx.moveTo(0, midY);\n\n    // Simula la onda ECG basándose en el análisis de texto\n    const heartRateMatch = analysisText.match(/Frecuencia cardíaca: (\\d+)/i);\n    const heartRate = heartRateMatch ? parseInt(heartRateMatch[1]) : 70; // Por defecto 70 bpm\n    const segmentLength = 200; // Longitud de un ciclo del ECG\n    const speedFactor = 70 / heartRate;\n    let x = 0;\n    while (x < width) {\n      // Onda P\n      ctx.quadraticCurveTo(x + 10, midY - 10, x + 20, midY);\n      x += 20 * speedFactor;\n\n      // Segmento PR y Complejo QRS\n      const qrsStart = x;\n      ctx.lineTo(x + 5, midY + 20); // Onda Q\n      ctx.lineTo(x + 10, midY - 60); // Onda R\n      ctx.lineTo(x + 15, midY); // Onda S\n      x += 15 * speedFactor;\n\n      // Elevación o depresión del segmento ST\n      if (analysisText.toLowerCase().includes('elevación del segmento st')) {\n        ctx.lineTo(x + 20, midY - 20);\n        x += 20 * speedFactor;\n      } else if (analysisText.toLowerCase().includes('depresión del segmento st')) {\n        ctx.lineTo(x + 20, midY + 20);\n        x += 20 * speedFactor;\n      } else {\n        ctx.lineTo(x + 20, midY); // Segmento ST normal\n        x += 20 * speedFactor;\n      }\n\n      // Onda T\n      ctx.quadraticCurveTo(x + 15, midY - 25, x + 30, midY);\n      x += 30 * speedFactor;\n    }\n    ctx.stroke();\n  };\n\n  // Función para manejar el envío de la solicitud a la API.\n  const handleAnalyzeImage = async () => {\n    // Se valida que se haya subido una imagen.\n    if (!image) {\n      setError('Por favor, sube una imagen.');\n      return;\n    }\n\n    // Se reinician los estados de respuesta, error y hallazgos.\n    setResponse('');\n    setError('');\n    setIsLoading(true);\n    setPathologicalFindings('');\n    try {\n      // Se lee la imagen subida como un URL de datos base64.\n      const reader = new FileReader();\n      reader.onload = async () => {\n        try {\n          var _result$candidates, _result$candidates$, _result$candidates$$c, _result$candidates$$c2, _result$candidates$$c3;\n          const base64Data = reader.result.split(',')[1];\n\n          // Se construye un prompt para un análisis sintético del ECG, pero pidiendo un diagnóstico más profesional y preciso.\n          const ecgAnalysisPrompt = `\n            Analiza este electrocardiograma (ECG) de forma profesional y muy precisa.\n            - **Resumen Clínico:** Un breve resumen con la impresión general del ECG.\n            - **Hallazgos Clave:** Una lista de puntos importantes (ej. mediciones, ritmo, anomalías).\n            - **Diagnóstico Diferencial:** Enumera las patologías más probables, usando terminología médica precisa.\n            - **Conclusión y Justificación:** Proporciona el diagnóstico más probable con una justificación clínica detallada basada en los hallazgos.\n            - **Formato:** Responde en español, usando listas de viñetas y un lenguaje médico riguroso.\n          `;\n\n          // Se combina el prompt sintético con el prompt del usuario, si existe.\n          const finalPrompt = prompt ? `${ecgAnalysisPrompt}\\n\\nAdemás, considera la siguiente instrucción del usuario: ${prompt}` : ecgAnalysisPrompt;\n\n          // Se construye el historial de chat para la API.\n          const chatHistory = [{\n            role: \"user\",\n            parts: [{\n              text: finalPrompt\n            }, {\n              inlineData: {\n                mimeType: image.type,\n                data: base64Data\n              }\n            }]\n          }];\n          const payload = {\n            contents: chatHistory\n          };\n\n          // Se usa una clave de API vacía ya que será proporcionada por el entorno de Canvas.\n          const apiKey = \"\";\n          const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\n\n          // Se realiza la llamada a la API con un mecanismo de reintento exponencial.\n          let attempts = 0;\n          const maxAttempts = 5;\n          let apiResponse;\n          while (attempts < maxAttempts) {\n            try {\n              apiResponse = await fetch(apiUrl, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(payload)\n              });\n              if (apiResponse.status !== 429) {\n                break; // Se sale del bucle si no es un error de \"demasiadas solicitudes\".\n              }\n\n              // Se duplica el tiempo de espera en cada reintento.\n              const delay = 2 ** attempts * 1000;\n              console.log(`Error 429, reintentando en ${delay}ms...`);\n              await new Promise(resolve => setTimeout(resolve, delay));\n              attempts++;\n            } catch (e) {\n              console.error('Error al intentar la llamada a la API:', e);\n              break;\n            }\n          }\n          if (!apiResponse.ok) {\n            throw new Error(`Error de la API: ${apiResponse.status} - ${apiResponse.statusText}`);\n          }\n          const result = await apiResponse.json();\n          const generatedText = result === null || result === void 0 ? void 0 : (_result$candidates = result.candidates) === null || _result$candidates === void 0 ? void 0 : (_result$candidates$ = _result$candidates[0]) === null || _result$candidates$ === void 0 ? void 0 : (_result$candidates$$c = _result$candidates$.content) === null || _result$candidates$$c === void 0 ? void 0 : (_result$candidates$$c2 = _result$candidates$$c.parts) === null || _result$candidates$$c2 === void 0 ? void 0 : (_result$candidates$$c3 = _result$candidates$$c2[0]) === null || _result$candidates$$c3 === void 0 ? void 0 : _result$candidates$$c3.text;\n\n          // Se actualiza el estado de la respuesta.\n          if (generatedText) {\n            setResponse(generatedText);\n\n            // Se revisa la respuesta en busca de hallazgos patológicos para la alerta.\n            const findings = checkPathologicalFindings(generatedText);\n            setPathologicalFindings(findings);\n          } else {\n            setResponse('No se pudo generar una respuesta. Intenta con un prompt diferente.');\n          }\n        } catch (e) {\n          console.error('Error al analizar la imagen:', e);\n          setError(`Error: ${e.message}`);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n\n      // Se inicia la lectura del archivo de imagen.\n      reader.onerror = e => {\n        console.error('Error al leer el archivo:', e);\n        setError('No se pudo leer el archivo de imagen.');\n        setIsLoading(false);\n      };\n      reader.readAsDataURL(image);\n    } catch (e) {\n      console.error('Error general de la aplicación:', e);\n      setError(`Error general de la aplicación: ${e.message}`);\n      setIsLoading(false);\n    }\n  };\n\n  // Función auxiliar para buscar palabras clave de hallazgos patológicos.\n  const checkPathologicalFindings = text => {\n    const keywords = ['arritmia', 'taquicardia', 'bradicardia', 'isquemia', 'iam', 'angina', 'bloqueo', 'alteración', 'elevación', 'depresión'];\n    const lowerCaseText = text.toLowerCase();\n    const detected = keywords.filter(keyword => lowerCaseText.includes(keyword));\n    return detected.length > 0 ? `Hallazgo(s) patológico(s) detectado(s): ${detected.join(', ')}` : '';\n  };\n\n  // El botón ahora se habilita solo si hay una imagen y no está cargando.\n  const isButtonDisabled = isLoading || !image;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4 font-sans\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-2xl bg-white shadow-xl rounded-2xl p-8 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-center text-gray-800\",\n        children: \"Analizador de Im\\xE1genes de ECG con IA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image-upload\",\n          className: \"block text-gray-700 font-semibold\",\n          children: \"Sube la imagen de un ECG:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image-upload\",\n          accept: \"image/*\",\n          onChange: e => setImage(e.target.files[0]),\n          className: \"w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(image),\n            alt: \"Vista previa\",\n            className: \"max-h-64 mx-auto rounded-lg shadow-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-gray-600\",\n            children: [\"Archivo seleccionado: \", image.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"prompt-input\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          placeholder: \"A\\xF1ade instrucciones espec\\xEDficas si quieres. Ej: 'presta atenci\\xF3n al segmento ST'.\",\n          className: \"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-violet-500 transition duration-200 resize-none\",\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnalyzeImage,\n        disabled: isButtonDisabled,\n        className: \"w-full py-3 px-6 text-white font-bold bg-violet-600 rounded-lg shadow-lg hover:bg-violet-700 focus:outline-none focus:ring-2 focus:ring-violet-500 focus:ring-offset-2 disabled:bg-violet-300 transition duration-200\",\n        title: isButtonDisabled ? \"Sube una imagen para habilitar este botón\" : \"Analiza el ECG\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"animate-spin h-5 w-5 text-white mx-auto\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"opacity-25\",\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            stroke: \"currentColor\",\n            strokeWidth: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            className: \"opacity-75\",\n            fill: \"currentColor\",\n            d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this) : 'Analizar ECG'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-red-100 text-red-700 rounded-lg border border-red-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold\",\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), pathologicalFindings && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-red-500 text-white rounded-lg border-2 border-red-700 shadow-md animate-pulse\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-center\",\n          children: \"\\xA1ALERTA! Posible hallazgo patol\\xF3gico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center mt-1\",\n          children: pathologicalFindings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6 bg-gray-50 rounded-lg border border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-gray-800 mb-2\",\n            children: \"Representaci\\xF3n del ECG:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              width: \"600\",\n              height: \"200\",\n              className: \"w-full bg-white border border-gray-300 rounded-md\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6 bg-gray-50 rounded-lg border border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-gray-800 mb-2\",\n            children: \"An\\xE1lisis de la IA:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700 whitespace-pre-wrap\",\n            children: response\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 p-4 bg-yellow-100 text-yellow-800 rounded-lg font-semibold\",\n            children: \"**Aviso: Este an\\xE1lisis es generado por una inteligencia artificial y tiene fines informativos. No sustituye la evaluaci\\xF3n, diagn\\xF3stico o tratamiento de un profesional m\\xE9dico calificado. Consulta siempre a un m\\xE9dico.**\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3IZC7qGGbjaJ17jNWREuly4riTE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","getAuth","signInAnonymously","signInWithCustomToken","initializeApp","jsxDEV","_jsxDEV","firebaseConfig","__firebase_config","JSON","parse","initialAuthToken","__initial_auth_token","appId","__app_id","app","auth","App","_s","prompt","setPrompt","image","setImage","response","setResponse","isLoading","setIsLoading","error","setError","pathologicalFindings","setPathologicalFindings","canvasRef","authenticate","e","console","message","canvas","current","drawECG","analysisText","ctx","getContext","width","height","clearRect","strokeStyle","lineWidth","gridSize","x","beginPath","moveTo","lineTo","stroke","y","midY","heartRateMatch","match","heartRate","parseInt","segmentLength","speedFactor","quadraticCurveTo","qrsStart","toLowerCase","includes","handleAnalyzeImage","reader","FileReader","onload","_result$candidates","_result$candidates$","_result$candidates$$c","_result$candidates$$c2","_result$candidates$$c3","base64Data","result","split","ecgAnalysisPrompt","finalPrompt","chatHistory","role","parts","text","inlineData","mimeType","type","data","payload","contents","apiKey","apiUrl","attempts","maxAttempts","apiResponse","fetch","method","headers","body","stringify","status","delay","log","Promise","resolve","setTimeout","ok","Error","statusText","json","generatedText","candidates","content","findings","checkPathologicalFindings","onerror","readAsDataURL","keywords","lowerCaseText","detected","filter","keyword","length","join","isButtonDisabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","accept","onChange","target","files","src","URL","createObjectURL","alt","name","value","placeholder","rows","onClick","disabled","title","xmlns","fill","viewBox","cx","cy","r","strokeWidth","d","ref","_c","$RefreshReg$"],"sources":["C:/Users/maram/Focus_ECG/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { getAuth, signInAnonymously, signInWithCustomToken } from 'firebase/auth';\r\nimport { initializeApp } from 'firebase/app';\r\n\r\n// Define las variables globales proporcionadas por el entorno de Canvas\r\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {};\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';\r\n\r\n// Se inicializa Firebase con las configuraciones dadas.\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\n\r\n// Se define el componente principal de la aplicación.\r\nexport default function App() {\r\n  const [prompt, setPrompt] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [response, setResponse] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [pathologicalFindings, setPathologicalFindings] = useState('');\r\n  const canvasRef = useRef(null);\r\n\r\n  // Se maneja la autenticación de Firebase al cargar la aplicación.\r\n  useEffect(() => {\r\n    const authenticate = async () => {\r\n      try {\r\n        if (initialAuthToken) {\r\n          // Se usa el token personalizado para iniciar sesión si está disponible.\r\n          await signInWithCustomToken(auth, initialAuthToken);\r\n        } else {\r\n          // Se usa el inicio de sesión anónimo si no hay token.\r\n          await signInAnonymously(auth);\r\n        }\r\n      } catch (e) {\r\n        console.error('Error de autenticación:', e);\r\n        setError(`Error de autenticación: ${e.message}`);\r\n      }\r\n    };\r\n    authenticate();\r\n  }, []);\r\n\r\n  // Efecto para dibujar el gráfico ECG en el canvas cuando la respuesta cambia.\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (canvas && response) {\r\n      drawECG(canvas, response);\r\n    }\r\n  }, [response]);\r\n\r\n  // Función para dibujar una simulación del ECG en el canvas.\r\n  const drawECG = (canvas, analysisText) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const width = canvas.width;\r\n    const height = canvas.height;\r\n    ctx.clearRect(0, 0, width, height);\r\n\r\n    // Dibuja el fondo cuadriculado del ECG\r\n    ctx.strokeStyle = '#f0f0f0';\r\n    ctx.lineWidth = 1;\r\n    const gridSize = 10;\r\n    for (let x = 0; x < width; x += gridSize) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, 0);\r\n      ctx.lineTo(x, height);\r\n      ctx.stroke();\r\n    }\r\n    for (let y = 0; y < height; y += gridSize) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, y);\r\n      ctx.lineTo(width, y);\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Dibuja la línea base\r\n    ctx.strokeStyle = '#000000';\r\n    ctx.lineWidth = 2;\r\n    ctx.beginPath();\r\n    const midY = height / 2;\r\n    ctx.moveTo(0, midY);\r\n\r\n    // Simula la onda ECG basándose en el análisis de texto\r\n    const heartRateMatch = analysisText.match(/Frecuencia cardíaca: (\\d+)/i);\r\n    const heartRate = heartRateMatch ? parseInt(heartRateMatch[1]) : 70; // Por defecto 70 bpm\r\n    const segmentLength = 200; // Longitud de un ciclo del ECG\r\n    const speedFactor = 70 / heartRate;\r\n    let x = 0;\r\n    \r\n    while (x < width) {\r\n      // Onda P\r\n      ctx.quadraticCurveTo(x + 10, midY - 10, x + 20, midY);\r\n      x += 20 * speedFactor;\r\n\r\n      // Segmento PR y Complejo QRS\r\n      const qrsStart = x;\r\n      ctx.lineTo(x + 5, midY + 20); // Onda Q\r\n      ctx.lineTo(x + 10, midY - 60); // Onda R\r\n      ctx.lineTo(x + 15, midY); // Onda S\r\n      x += 15 * speedFactor;\r\n      \r\n      // Elevación o depresión del segmento ST\r\n      if (analysisText.toLowerCase().includes('elevación del segmento st')) {\r\n        ctx.lineTo(x + 20, midY - 20);\r\n        x += 20 * speedFactor;\r\n      } else if (analysisText.toLowerCase().includes('depresión del segmento st')) {\r\n        ctx.lineTo(x + 20, midY + 20);\r\n        x += 20 * speedFactor;\r\n      } else {\r\n        ctx.lineTo(x + 20, midY); // Segmento ST normal\r\n        x += 20 * speedFactor;\r\n      }\r\n\r\n      // Onda T\r\n      ctx.quadraticCurveTo(x + 15, midY - 25, x + 30, midY);\r\n      x += 30 * speedFactor;\r\n    }\r\n    \r\n    ctx.stroke();\r\n  };\r\n\r\n  // Función para manejar el envío de la solicitud a la API.\r\n  const handleAnalyzeImage = async () => {\r\n    // Se valida que se haya subido una imagen.\r\n    if (!image) {\r\n      setError('Por favor, sube una imagen.');\r\n      return;\r\n    }\r\n\r\n    // Se reinician los estados de respuesta, error y hallazgos.\r\n    setResponse('');\r\n    setError('');\r\n    setIsLoading(true);\r\n    setPathologicalFindings('');\r\n\r\n    try {\r\n      // Se lee la imagen subida como un URL de datos base64.\r\n      const reader = new FileReader();\r\n      reader.onload = async () => {\r\n        try {\r\n          const base64Data = reader.result.split(',')[1];\r\n          \r\n          // Se construye un prompt para un análisis sintético del ECG, pero pidiendo un diagnóstico más profesional y preciso.\r\n          const ecgAnalysisPrompt = `\r\n            Analiza este electrocardiograma (ECG) de forma profesional y muy precisa.\r\n            - **Resumen Clínico:** Un breve resumen con la impresión general del ECG.\r\n            - **Hallazgos Clave:** Una lista de puntos importantes (ej. mediciones, ritmo, anomalías).\r\n            - **Diagnóstico Diferencial:** Enumera las patologías más probables, usando terminología médica precisa.\r\n            - **Conclusión y Justificación:** Proporciona el diagnóstico más probable con una justificación clínica detallada basada en los hallazgos.\r\n            - **Formato:** Responde en español, usando listas de viñetas y un lenguaje médico riguroso.\r\n          `;\r\n          \r\n          // Se combina el prompt sintético con el prompt del usuario, si existe.\r\n          const finalPrompt = prompt\r\n            ? `${ecgAnalysisPrompt}\\n\\nAdemás, considera la siguiente instrucción del usuario: ${prompt}`\r\n            : ecgAnalysisPrompt;\r\n\r\n          // Se construye el historial de chat para la API.\r\n          const chatHistory = [{\r\n            role: \"user\",\r\n            parts: [\r\n              { text: finalPrompt },\r\n              {\r\n                inlineData: {\r\n                  mimeType: image.type,\r\n                  data: base64Data\r\n                }\r\n              }\r\n            ]\r\n          }];\r\n\r\n          const payload = {\r\n            contents: chatHistory\r\n          };\r\n\r\n          // Se usa una clave de API vacía ya que será proporcionada por el entorno de Canvas.\r\n          const apiKey = \"\";\r\n          const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;\r\n\r\n          // Se realiza la llamada a la API con un mecanismo de reintento exponencial.\r\n          let attempts = 0;\r\n          const maxAttempts = 5;\r\n          let apiResponse;\r\n          \r\n          while (attempts < maxAttempts) {\r\n            try {\r\n              apiResponse = await fetch(apiUrl, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(payload)\r\n              });\r\n\r\n              if (apiResponse.status !== 429) {\r\n                break; // Se sale del bucle si no es un error de \"demasiadas solicitudes\".\r\n              }\r\n\r\n              // Se duplica el tiempo de espera en cada reintento.\r\n              const delay = 2 ** attempts * 1000;\r\n              console.log(`Error 429, reintentando en ${delay}ms...`);\r\n              await new Promise(resolve => setTimeout(resolve, delay));\r\n              attempts++;\r\n            } catch (e) {\r\n              console.error('Error al intentar la llamada a la API:', e);\r\n              break;\r\n            }\r\n          }\r\n          \r\n          if (!apiResponse.ok) {\r\n              throw new Error(`Error de la API: ${apiResponse.status} - ${apiResponse.statusText}`);\r\n          }\r\n\r\n          const result = await apiResponse.json();\r\n          const generatedText = result?.candidates?.[0]?.content?.parts?.[0]?.text;\r\n          \r\n          // Se actualiza el estado de la respuesta.\r\n          if (generatedText) {\r\n            setResponse(generatedText);\r\n            \r\n            // Se revisa la respuesta en busca de hallazgos patológicos para la alerta.\r\n            const findings = checkPathologicalFindings(generatedText);\r\n            setPathologicalFindings(findings);\r\n          } else {\r\n            setResponse('No se pudo generar una respuesta. Intenta con un prompt diferente.');\r\n          }\r\n        } catch (e) {\r\n          console.error('Error al analizar la imagen:', e);\r\n          setError(`Error: ${e.message}`);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      };\r\n\r\n      // Se inicia la lectura del archivo de imagen.\r\n      reader.onerror = (e) => {\r\n        console.error('Error al leer el archivo:', e);\r\n        setError('No se pudo leer el archivo de imagen.');\r\n        setIsLoading(false);\r\n      };\r\n      reader.readAsDataURL(image);\r\n\r\n    } catch (e) {\r\n      console.error('Error general de la aplicación:', e);\r\n      setError(`Error general de la aplicación: ${e.message}`);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Función auxiliar para buscar palabras clave de hallazgos patológicos.\r\n  const checkPathologicalFindings = (text) => {\r\n    const keywords = ['arritmia', 'taquicardia', 'bradicardia', 'isquemia', 'iam', 'angina', 'bloqueo', 'alteración', 'elevación', 'depresión'];\r\n    const lowerCaseText = text.toLowerCase();\r\n    const detected = keywords.filter(keyword => lowerCaseText.includes(keyword));\r\n    return detected.length > 0 ? `Hallazgo(s) patológico(s) detectado(s): ${detected.join(', ')}` : '';\r\n  };\r\n\r\n  // El botón ahora se habilita solo si hay una imagen y no está cargando.\r\n  const isButtonDisabled = isLoading || !image;\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4 font-sans\">\r\n      <div className=\"w-full max-w-2xl bg-white shadow-xl rounded-2xl p-8 space-y-6\">\r\n        <h1 className=\"text-3xl font-bold text-center text-gray-800\">\r\n          Analizador de Imágenes de ECG con IA\r\n        </h1>\r\n\r\n        <div className=\"space-y-4\">\r\n          <label htmlFor=\"image-upload\" className=\"block text-gray-700 font-semibold\">\r\n            Sube la imagen de un ECG:\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"image-upload\"\r\n            accept=\"image/*\"\r\n            onChange={(e) => setImage(e.target.files[0])}\r\n            className=\"w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100\"\r\n          />\r\n          {image && (\r\n            <div className=\"mt-4 text-center\">\r\n              <img src={URL.createObjectURL(image)} alt=\"Vista previa\" className=\"max-h-64 mx-auto rounded-lg shadow-md\" />\r\n              <p className=\"mt-2 text-sm text-gray-600\">Archivo seleccionado: {image.name}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          <textarea\r\n            id=\"prompt-input\"\r\n            value={prompt}\r\n            onChange={(e) => setPrompt(e.target.value)}\r\n            placeholder=\"Añade instrucciones específicas si quieres. Ej: 'presta atención al segmento ST'.\"\r\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-violet-500 transition duration-200 resize-none\"\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          onClick={handleAnalyzeImage}\r\n          disabled={isButtonDisabled}\r\n          className=\"w-full py-3 px-6 text-white font-bold bg-violet-600 rounded-lg shadow-lg hover:bg-violet-700 focus:outline-none focus:ring-2 focus:ring-violet-500 focus:ring-offset-2 disabled:bg-violet-300 transition duration-200\"\r\n          title={isButtonDisabled ? \"Sube una imagen para habilitar este botón\" : \"Analiza el ECG\"}\r\n        >\r\n          {isLoading ? (\r\n            <svg className=\"animate-spin h-5 w-5 text-white mx-auto\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n          ) : (\r\n            'Analizar ECG'\r\n          )}\r\n        </button>\r\n\r\n        {error && (\r\n          <div className=\"p-4 bg-red-100 text-red-700 rounded-lg border border-red-200\">\r\n            <p className=\"font-semibold\">Error:</p>\r\n            <p>{error}</p>\r\n          </div>\r\n        )}\r\n        \r\n        {pathologicalFindings && (\r\n          <div className=\"p-4 bg-red-500 text-white rounded-lg border-2 border-red-700 shadow-md animate-pulse\">\r\n            <p className=\"font-bold text-center\">¡ALERTA! Posible hallazgo patológico</p>\r\n            <p className=\"text-center mt-1\">{pathologicalFindings}</p>\r\n          </div>\r\n        )}\r\n\r\n        {response && (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"p-6 bg-gray-50 rounded-lg border border-gray-200\">\r\n              <h2 className=\"text-xl font-bold text-gray-800 mb-2\">Representación del ECG:</h2>\r\n              <div className=\"relative\">\r\n                <canvas ref={canvasRef} width=\"600\" height=\"200\" className=\"w-full bg-white border border-gray-300 rounded-md\"></canvas>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-6 bg-gray-50 rounded-lg border border-gray-200\">\r\n              <h2 className=\"text-xl font-bold text-gray-800 mb-2\">Análisis de la IA:</h2>\r\n              <p className=\"text-gray-700 whitespace-pre-wrap\">{response}</p>\r\n              <div className=\"mt-4 p-4 bg-yellow-100 text-yellow-800 rounded-lg font-semibold\">\r\n                **Aviso: Este análisis es generado por una inteligencia artificial y tiene fines informativos. No sustituye la evaluación, diagnóstico o tratamiento de un profesional médico calificado. Consulta siempre a un médico.**\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}